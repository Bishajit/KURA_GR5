version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0
jobs:
  build_and_test_backend:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Install Python dependencies
          command: |
            cd backend/
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
            pip install --user -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            pytest --junitxml=test-reports/junit.xml --html=test-reports/pytest_report.html --self-contained-html
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
    
  build_and_test_frontend:
      docker:
        - image: nginx
      steps:
        - checkout
        - run:
            name: copying file
            command: |
              cd frontend/
              cp -r ~/project/frontend/. /usr/share/nginx/html
  
  build_and_push:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest"' >> $BASH_ENV
      
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME

workflows:
  build_test:
    jobs:
      - build_and_test_frontend
      - build_and_test_backend
  build-deploy:
    jobs:
      - build_and_push:
          filters:
            branches:
              only: main
  